name: Release
# 触发方式
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        # 我这里只需要两个平台，完整的可以参考官方的workflow
        platform: ['windows-latest']

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "npm"
      - name: Install frontend dependencies
        run: npm install
      # 修复环境变量传递并添加调试步骤
      - name: Debug environment
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        if:
          ${{ vars.TAURI_PRIVATE_KEY != '' }}
        run: |
          Write-Host "Debugging Secrets and Environment Variables"
          if (-not $env:TAURI_SIGNING_PRIVATE_KEY) {
            Write-Host "TAURI_SIGNING_PRIVATE_KEY is missing!"
            exit 1
          } else {
            Write-Host "TAURI_SIGNING_PRIVATE_KEY exists."
          }
          if (-not $env:TAURI_SIGNING_PRIVATE_KEY_PASSWORD) {
            Write-Host "TAURI_SIGNING_PRIVATE_KEY_PASSWORD is missing!"
            exit 1
          } else {
            Write-Host "TAURI_SIGNING_PRIVATE_KEY_PASSWORD exists."
          }

      # 使用tauri actions
      - name: Build the app
        id: build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # 使用之前配置的私钥
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "app_v__VERSION__"
          releaseBody: ""
          releaseDraft: true
          prerelease: false
      - name: Install GitHub Actions dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # 使用之前配置的私钥
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        run: npm install @actions/github @actions/core
      - name: Get latest tag
        id: get_tag
        run: |
          $latest_tag = git describe --tags (git rev-list --tags --max-count=1)
          echo "latest_tag=$latest_tag" >> $env:GITHUB_ENV
      - name: Use latest tag
        run: |
          echo "The latest tag is ${{ env.latest_tag }}"
      - name: Upload assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LATEST_TAG: ${{ env.latest_tag }}
        # 运行自己的脚本
        run: node scripts/updater.mjs

